"""
Django settings for conexionerp project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from identity.django import Auth
from dotenv import load_dotenv

# Cargar las variables de entode el archivo .env
load_dotenv()

#AUTENTICACIÓN:
AUTH = Auth(
    os.getenv('CLIENT_ID'),
    client_credential=os.getenv('CLIENT_SECRET'),
    redirect_uri=os.getenv('REDIRECT_URI'),
    #scopes=os.getenv('SCOPE', "").split(),
    #scopes= ["User.Read", "GroupMember.Read.All", "Directory.Read.All", "User.Read.All", "User.ReadBasic.All"],
    authority=os.getenv('AUTHORITY'),
    )

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'default-secret-key')
DEBUG = os.getenv('DEBUG_MODE')
# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '*').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_integrations', # Aplicacion que realiza las conexiones con Odoo y ms365
    'app_sync', # Sincroniza informacion de listas de sharepoint
    'app_file_management', # Realiza movimiento de archivos a bibliotecas de sharepoint
    'app_task_sync', # Sincroniza tareas de planner en microsoft 365
    'app_pdf_management', # Genera archivos PDF con informacion de registros de listas en sharepoint
    'app_logging',  # Control de logs de la ejecucion de tareas de sincronizacion y automatizaciones
    'app_comprobantes',# Control de asistencia a capacitaciones
    'app_learning', # Control de asistencia a capacitaciones
    'identity', # Control de Login con Microsoft
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Debe ser el primero en la lista
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:8001",
    "http://localhost:3000",
    "https://app-softwareids-prod-001-ahgyajb0ejfwbwa9.eastus-01.azurewebsites.net",
    "https://aseo.fundacionudea.net",
    "https://erp-apps.fundacionudea.net",
    "https://app-softwareids-dev-001-hvbfatg2hhevgdfr.eastus-01.azurewebsites.net",
    "https://empleados.fundacionudea.org"
]
CORS_ALLOW_HEADERS = [
    "content-type",
]
CSRF_TRUSTED_ORIGINS = ['https://app-conexionerp-prod-001.azurewebsites.net','https://erp-apps.fundacionudea.net','https://app-softwareids-dev-001-hvbfatg2hhevgdfr.eastus-01.azurewebsites.net']

CORS_ALLOW_METHODS = [
    "GET",
    "OPTIONS",
]

# Alternativamente, permitir todos los orígenes (no recomendado para producción)
#CORS_ALLOW_ALL_ORIGINS = True
ROOT_URLCONF = 'conexionerp.urls'
# logs/settings.py
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'conexionerp.wsgi.application'
# settings.py

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
AZURE_CONNECTION_STRING = os.getenv("AZURE_CONNECTION_STRING")
AZURE_CONTAINER = os.getenv("AZURE_CONTAINER")
AZURE_CONTAINER_CIR = os.getenv("AZURE_CONTAINER_CIR")



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': '5432',
    }, #ESPACIO PARA ENLAZAR LA INTRANET
    'auth_db': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('AUTH_DB_NAME'),
        'USER': os.getenv('AUTH_DB_USER'),
        'PASSWORD': os.getenv('AUTH_DB_PASSWORD'),
        'HOST': os.getenv('AUTH_DB_HOST'),
        'PORT': os.getenv('AUTH_DB_PORT', '3306'),
    }
}

#CONFIGURACION DE AUTENTICACION
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend', #Backend predeterminado
    'conexionerp.auth_backends.SecondaryDatabaseBackend', #Backend personalizado
]


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_TZ = False


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#         '': {  # Este logger captura todos los logs
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# Media files (Uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
